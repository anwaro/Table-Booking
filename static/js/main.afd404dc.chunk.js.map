{"version":3,"sources":["components/SelectChairsCount/style.module.scss","components/SelectTableType/style.module.scss","components/Chair/style.module.scss","components/Plate/style.module.scss","components/Table/style.module.scss","components/Scene/style.module.scss","constants/Table.ts","helpers/array.ts","helpers/table.ts","helpers/chair.ts","components/Chair/index.tsx","components/Chair/useChairStyle.tsx","components/Plate/index.tsx","components/Plate/usePlateStyle.tsx","components/Scene/index.tsx","constants/Chair.ts","components/SelectChairsCount/index.tsx","components/SelectTableType/index.tsx","components/Table/index.tsx","components/Table/useTableStyle.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","TableType","array","count","Array","fill","tableSize","type","Rectangle","width","Math","floor","max","height","rectangleTableSize","Circle","size","circleTableSize","Square","squareTableSize","calculateAngle","index","circleTableAngle","rectangleTableAngle","squareTableAngle","k","circleTableTranslate","initial","initialY","offsetY","y","x","squareTableTranslate","indexes","map","_","i","filter","length","indexOf","rectangleTableTranslate","includes","calculateTranslate","data","Chair","tableType","style","active","trans","useState","angle","setAngle","translate","setTranslate","opacity","setOpacity","useEffect","setTimeout","transform","useChairStyle","className","s","chairWrapper","chair","chairD","Pale","usePlateStyle","paleWrapper","pale","Scene","ChairConfig","children","scene","SelectChairsCount","setCount","setActive","changeCount","useCallback","diff","c","min","Min","Max","chairCount","classNames","btn","onClick","display","SelectTableType","setTableType","Object","values","table","toLowerCase","Table","useTableStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afd404dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chairCount\":\"style_chairCount__3Kfq_\",\"btn\":\"style_btn__nH2nb\",\"active\":\"style_active__4k1_i\",\"display\":\"style_display__2G-Gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableType\":\"style_tableType__1URzV\",\"table\":\"style_table__3ybn7\",\"circle\":\"style_circle__2HtZk\",\"rectangle\":\"style_rectangle__opC0_\",\"square\":\"style_square__1uydD\",\"active\":\"style_active__2fky3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chairWrapper\":\"style_chairWrapper__35k-2\",\"chair\":\"style_chair__A1wqQ\",\"chairD\":\"style_chairD__3WJbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paleWrapper\":\"style_paleWrapper__2Ib3_\",\"pale\":\"style_pale__1sFuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__5RjaQ\",\"circle\":\"style_circle__3ok-h\",\"rectangle\":\"style_rectangle__3Licg\",\"square\":\"style_square__p5N-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scene\":\"style_scene__1SvsR\"};","export enum TableType {\n    Circle = 'Circle',\n    Square = 'Square',\n    Rectangle = 'Rectangle',\n}\n","export const array = (count: number) => [...new Array(count).fill(0)];\n","import {TableType} from '../constants/Table';\n\nexport const circleTableSize = (count: number) => {\n    const size = 200 + count * 30;\n    return {\n        width: size,\n        height: size,\n    };\n};\nexport const squareTableSize = (count: number) => {\n    const size = 200 + count * 30;\n    return {\n        width: size,\n        height: size,\n    };\n};\nexport const rectangleTableSize = (count: number) => {\n    const size = 400 + Math.floor(Math.max(0, count - 5) / 2) * 140;\n    return {\n        width: size,\n        height: 230,\n    };\n};\nexport const tableSize = (count: number, type: TableType) => {\n    switch (type) {\n        case TableType.Rectangle:\n            return rectangleTableSize(count);\n        case TableType.Circle:\n            return circleTableSize(count);\n        case TableType.Square:\n        default:\n            return squareTableSize(count);\n    }\n};\n","import {TableType} from '../constants/Table';\n\nimport {array} from './array';\nimport {tableSize} from './table';\n\nexport const circleTableAngle = (index: number, count: number) =>\n    90 + (360 / count) * index;\n\nexport const squareTableAngle = (index: number) => [90, 270, 0, 180][index % 4];\n\nexport const rectangleTableAngle = (index: number) => {\n    if (index === 4) {\n        return 90;\n    }\n    if (index === 5) {\n        return 270;\n    }\n    return index % 2 ? 180 : 0;\n};\n\nexport const calculateAngle = (\n    index: number,\n    count: number,\n    type: TableType,\n) => {\n    switch (type) {\n        case TableType.Circle:\n            return circleTableAngle(index, count);\n        case TableType.Rectangle:\n            return rectangleTableAngle(index);\n        case TableType.Square:\n        default:\n            return squareTableAngle(index);\n    }\n};\n\nconst k = 114;\n\ntype Size = {width: number; height: number};\ntype DataType = {\n    size: Size;\n    index: number;\n    count: number;\n    initial: boolean;\n    offsetY: number;\n    initialY: number;\n};\n\nexport const circleTableTranslate = ({\n    size: {width},\n    initial,\n    initialY,\n    offsetY,\n}: DataType) => ({\n    y: initial ? initialY : -(width / 2 + offsetY),\n    x: 0,\n});\n\nexport const squareTableTranslate = ({\n    size: {width},\n    index,\n    count,\n    initial,\n    initialY,\n    offsetY,\n}: DataType) => {\n    const indexes = array(count)\n        .map((_, i) => i)\n        .filter((i) => i % 4 === index % 4);\n    const dx = (width - indexes.length * k) / (indexes.length + 1);\n    return {\n        y: initial ? initialY : -(width / 2 + offsetY),\n        x: -(width / 2 + k / 2) + (dx + k) * (indexes.indexOf(index) + 1),\n    };\n};\n\nexport const rectangleTableTranslate = ({\n    size: {width, height},\n    index,\n    count,\n    initial,\n    initialY,\n    offsetY,\n}: DataType) => {\n    if (index === 4 || index === 5) {\n        return {\n            y: initial ? initialY : -(width / 2 + offsetY),\n            x: 0,\n        };\n    }\n    const indexes = array(count)\n        .map((_, i) => i)\n        .filter((i) => ![4, 5].includes(i) && i % 2 === index % 2);\n    const dx = (width - 30 - indexes.length * k) / (indexes.length + 1);\n    return {\n        y: initial ? initialY : -(height / 2 + offsetY),\n        x:\n            -((width - 30) / 2 + k / 2) +\n            (dx + k) * (indexes.indexOf(index) + 1),\n    };\n};\n\nexport const calculateTranslate =\n    (offsetY: number, initialY: number) =>\n    (index: number, count: number, type: TableType, initial = false) => {\n        const size = tableSize(count, type);\n        const data: DataType = {\n            offsetY,\n            index,\n            count,\n            initial,\n            initialY,\n            size,\n        };\n        switch (type) {\n            case TableType.Circle:\n                return circleTableTranslate(data);\n            case TableType.Rectangle:\n                return rectangleTableTranslate(data);\n            case TableType.Square:\n            default:\n                return squareTableTranslate(data);\n        }\n    };\n","import React from 'react';\n\nimport {TableType} from '../../constants/Table';\n\nimport s from './style.module.scss';\nimport {useChairStyle} from './useChairStyle';\n\ntype ChairProps = {\n    index: number;\n    count: number;\n    active: boolean;\n    tableType: TableType;\n};\n\nfunction Chair({index, count, tableType, active}: ChairProps) {\n    const style = useChairStyle(index, count, active, tableType);\n    return (\n        <div className={s.chairWrapper} style={style}>\n            <div className={s.chair}>\n                <div className={s.chairD} />\n            </div>\n        </div>\n    );\n}\n\nexport default Chair;\n","import {useEffect, useState} from 'react';\n\nimport {TableType} from '../../constants/Table';\nimport {calculateAngle, calculateTranslate} from '../../helpers/chair';\n\nexport function useChairStyle(\n    index: number,\n    count: number,\n    active: boolean,\n    tableType: TableType,\n) {\n    const trans = calculateTranslate(70, -400);\n    const [angle, setAngle] = useState(90 + (360 / count) * index);\n    const [translate, setTranslate] = useState(\n        trans(index, count, tableType, true),\n    );\n    const [opacity, setOpacity] = useState(0);\n\n    useEffect(() => {\n        setAngle(calculateAngle(index, count, tableType));\n    }, [count, tableType, index]);\n\n    useEffect(() => {\n        if (opacity) {\n            setOpacity(1);\n            setTranslate(trans(index, count, tableType));\n        } else {\n            setTimeout(() => {\n                setOpacity(1);\n                setTranslate(trans(index, count, tableType));\n            }, 200);\n        }\n    }, [tableType, count, index]);\n\n    useEffect(() => {\n        if (!active) {\n            setOpacity(0);\n            setTranslate(trans(index, count, tableType, true));\n        }\n    }, [active, index]);\n    return {\n        opacity,\n        transform: `rotate(${angle}deg)`,\n        '--chair-translate': `translate( ${translate.x}px, ${translate.y}px)`,\n    };\n}\n","import React from 'react';\n\nimport {TableType} from '../../constants/Table';\n\nimport s from './style.module.scss';\nimport {usePlateStyle} from './usePlateStyle';\n\ntype PaleProps = {\n    index: number;\n    count: number;\n    active: boolean;\n    tableType: TableType;\n};\n\nfunction Pale({index, count, tableType, active}: PaleProps) {\n    const style = usePlateStyle(index, count, active, tableType);\n    return (\n        <div className={s.paleWrapper} style={style}>\n            <div className={s.pale} />\n        </div>\n    );\n}\n\nexport default Pale;\n","import {useEffect, useState} from 'react';\n\nimport {TableType} from '../../constants/Table';\nimport {calculateAngle, calculateTranslate} from '../../helpers/chair';\n\nexport function usePlateStyle(\n    index: number,\n    count: number,\n    active: boolean,\n    tableType: TableType,\n) {\n    const trans = calculateTranslate(-50, 0);\n    const [angle, setAngle] = useState(90 + (360 / count) * index);\n    const [translate, setTranslate] = useState(\n        trans(index, count, tableType, true),\n    );\n    const [opacity, setOpacity] = useState(0);\n\n    useEffect(() => {\n        setAngle(calculateAngle(index, count, tableType));\n    }, [index, count, tableType]);\n\n    useEffect(() => {\n        if (opacity) {\n            setOpacity(1);\n            setTranslate(trans(index, count, tableType));\n        } else {\n            setTimeout(() => {\n                setOpacity(1);\n                setTranslate(trans(index, count, tableType));\n            }, 100);\n        }\n    }, [tableType, count, index]);\n\n    useEffect(() => {\n        if (!active) {\n            setOpacity(0);\n            setTranslate(trans(index, count, tableType, true));\n        }\n    }, [active, index]);\n\n    return {\n        opacity,\n        transform: `rotate(${angle}deg)`,\n        '--plate-translate': `translate( ${translate.x}px, ${translate.y}px)`,\n    };\n}\n","import React, {ReactNode} from 'react';\n\nimport s from './style.module.scss';\n\ntype SceneProps = {\n    children: ReactNode;\n};\n\nfunction Scene({children}: SceneProps) {\n    return <div className={s.scene}>{children}</div>;\n}\n\nexport default Scene;\n","export enum ChairConfig {\n    Min = 1,\n    Max = 12,\n}\n","import classNames from 'classnames';\nimport React, {useCallback} from 'react';\n\nimport {ChairConfig} from '../../constants/Chair';\n\nimport s from './style.module.scss';\n\ntype SelectChairsProps = {\n    count: number;\n    setCount: (count: number) => void;\n    active: number;\n    setActive: (count: number) => void;\n};\n\nfunction SelectChairsCount({\n    count,\n    setCount,\n    active,\n    setActive,\n}: SelectChairsProps) {\n    const changeCount = useCallback(\n        (diff: number) => {\n            if (count !== active) {\n                return;\n            }\n            const c = Math.min(\n                Math.max(count + diff, ChairConfig.Min),\n                ChairConfig.Max,\n            );\n            if (c === count) {\n                return;\n            }\n            if (diff > 0) {\n                setActive(c);\n                setCount(c);\n            } else {\n                setActive(c);\n                setTimeout(() => setCount(c), 300);\n            }\n        },\n        [count, active, setActive, setCount],\n    );\n\n    return (\n        <div className={s.chairCount}>\n            <div\n                className={classNames(s.btn, {\n                    [s.active]: count > ChairConfig.Min,\n                })}\n                onClick={() => changeCount(-1)}\n            >\n                {'-'}\n            </div>\n            <div className={s.display}>{count}</div>\n            <div\n                className={classNames(s.btn, {\n                    [s.active]: count < ChairConfig.Max,\n                })}\n                onClick={() => changeCount(1)}\n            >\n                {'+'}\n            </div>\n        </div>\n    );\n}\n\nexport default SelectChairsCount;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport {TableType} from '../../constants/Table';\n\nimport s from './style.module.scss';\n\ntype SelectTableTypeProps = {\n    setTableType: (tableType: TableType) => void;\n    tableType: TableType;\n};\n\nfunction SelectTableType({setTableType, tableType}: SelectTableTypeProps) {\n    return (\n        <div className={s.tableType}>\n            {Object.values(TableType).map((type) => (\n                <div\n                    key={type}\n                    className={classNames(s.table, s[type.toLowerCase()], {\n                        [s.active]: type === tableType,\n                    })}\n                    onClick={() => setTableType(type)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default SelectTableType;\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport {TableType} from '../../constants/Table';\n\nimport s from './style.module.scss';\nimport {useTableStyle} from './useTableStyle';\n\ntype TableProps = {\n    chairCount: number;\n    tableType: TableType;\n};\n\nfunction Table({chairCount, tableType}: TableProps) {\n    const {width, height} = useTableStyle(chairCount, tableType);\n\n    return (\n        <div\n            className={classNames(s.table, s[tableType.toLowerCase()])}\n            style={{width, height}}\n        />\n    );\n}\n\nexport default Table;\n","import {TableType} from '../../constants/Table';\nimport {tableSize} from '../../helpers/table';\n\nexport function useTableStyle(chairCount: number, tableType: TableType) {\n    return {\n        ...tableSize(chairCount, tableType),\n    };\n}\n","import React, {useState} from 'react';\n\nimport './App.css';\nimport Chair from './components/Chair';\nimport Pale from './components/Plate';\nimport Scene from './components/Scene';\nimport SelectChairsCount from './components/SelectChairsCount';\nimport SelectTableType from './components/SelectTableType';\nimport Table from './components/Table';\nimport {TableType} from './constants/Table';\nimport {array} from './helpers/array';\n\nfunction App() {\n    const [count, setCount] = useState(2);\n    const [active, setActive] = useState(2);\n    const [tableType, setTableType] = useState(TableType.Circle);\n\n    return (\n        <Scene>\n            <SelectTableType\n                setTableType={setTableType}\n                tableType={tableType}\n            />\n            <SelectChairsCount\n                count={count}\n                setCount={setCount}\n                active={active}\n                setActive={setActive}\n            />\n            <Table chairCount={count} tableType={tableType} />\n            {array(count).map((_, i) => (\n                <Pale\n                    key={i}\n                    index={i}\n                    count={count}\n                    active={active > i}\n                    tableType={tableType}\n                />\n            ))}\n            {array(count).map((_, i) => (\n                <Chair\n                    key={i}\n                    index={i}\n                    count={count}\n                    active={active > i}\n                    tableType={tableType}\n                />\n            ))}\n        </Scene>\n    );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            },\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}